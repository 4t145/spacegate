name: CICD

on:
  push:
    tags:
      - '*'

jobs:
  check:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust envrionment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: Check format
        run: cargo fmt --all -- --check

      - name: Check clippy
        run: cargo clippy --all --all-features

      - name: Run test
        run: cargo test --all-features

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: cobertura.xml

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust envrionment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      # - name: Prepare Artifact
      #   shell: bash
      #   run: |

      # - name: Upload Artifact to Summary
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.ARTIFACT_DIR }}
      #     path: |
      #       *.tar.gz
      #       *.txt

      # - name: Upload Artifact to Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       *.tar.gz
      #       *.txt

  publish-kernel:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust envrionment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cargo login
        run: cargo login ${{ secrets.CRATES_TOKEN }}

      - name: Cargo package kernel
        working-directory: kernel
        run: cargo package

      - name: Cargo publish kernel
        working-directory: kernel
        run: cargo publish

  publish-serv-full:
      if: startsWith(github.ref, 'refs/tags/')
      needs: [check, publish-kernel]
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Init rust envrionment
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable

        - name: Cargo login
          run: cargo login ${{ secrets.CRATES_TOKEN }}

        - name: Cargo package service full
          working-directory: services/full
          run: cargo package

        - name: Cargo publish service full
          working-directory: services/full
          run: cargo publish

publish-serv-native:
      if: startsWith(github.ref, 'refs/tags/')
      needs: [check, publish-kernel]
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Init rust envrionment
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable

        - name: Cargo login
          run: cargo login ${{ secrets.CRATES_TOKEN }}

        - name: Cargo package service native
          working-directory: services/native
          run: cargo package

        - name: Cargo publish service native
          working-directory: services/native
          run: cargo publish

publish-serv-simplify:
      if: startsWith(github.ref, 'refs/tags/')
      needs: [check, publish-kernel]
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Init rust envrionment
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable

        - name: Cargo login
          run: cargo login ${{ secrets.CRATES_TOKEN }}

        - name: Cargo package service simplify
          working-directory: services/simplify
          run: cargo package

        - name: Cargo publish service simplify
          working-directory: services/simplify
          run: cargo publish
